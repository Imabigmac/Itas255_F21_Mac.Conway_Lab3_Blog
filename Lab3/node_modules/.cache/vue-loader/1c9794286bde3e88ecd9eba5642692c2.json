{"remainingRequest":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\src\\views\\Notes.vue?vue&type=template&id=82ae6712&","dependencies":[{"path":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\src\\views\\Notes.vue","mtime":1638987927188},{"path":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638389449386},{"path":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1638389452989},{"path":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1638389449386},{"path":"C:\\Users\\Mac\\Documents\\BlogDocker\\Lab3\\node_modules\\vue-loader\\lib\\index.js","mtime":1638389451236}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}